# üöÄ Ultimate tmux configuration for Modern Development
# Optimized for performance, aesthetics, and productivity
# Last updated: July 5, 2025

# ===============================================================================
# üìö TABLE OF CONTENTS
# ===============================================================================
#
# 1. CORE TERMINAL SETTINGS     - Terminal type, shell, colors
# 2. PERFORMANCE OPTIMIZATION   - Timing, buffers, responsiveness
# 3. USABILITY ENHANCEMENTS    - Mouse, indexing, monitoring
# 4. KEY BINDINGS              - All keyboard shortcuts
#    ‚îú‚îÄ‚îÄ Session Management     - New, switch, kill sessions
#    ‚îú‚îÄ‚îÄ Window Management      - Create, navigate, organize windows
#    ‚îú‚îÄ‚îÄ Pane Management        - Split, resize, navigate panes
#    ‚îú‚îÄ‚îÄ Copy Mode             - Vim-like text selection
#    ‚îî‚îÄ‚îÄ Help & Discovery      - Keybinding reference
# 5. VISUAL STYLING            - Colors, themes, status bar
# 6. PLUGIN MANAGEMENT         - TPM and plugin configurations
# 7. CONDITIONAL CONFIGS       - OS-specific settings
# 8. CUSTOM HOOKS             - Automation and smart features
#
# üí° Quick Help: Press C-a ? for all keys, C-a ~ for quick reference
#
# ===============================================================================

# ===============================================================================
# CORE TERMINAL SETTINGS
# ===============================================================================

# Terminal type and color support
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"
# Completely disable cursor shape changes to fix [2 q artifacts in nvim
set -ga terminal-overrides ",*:Ss="
set-environment -g COLORTERM "truecolor"

# Shell settings
set -g default-shell /bin/zsh
set -g default-command /bin/zsh

# ===============================================================================
# PERFORMANCE OPTIMIZATION
# ===============================================================================

# Reduce delay for better responsiveness
set -sg escape-time 0
set -g repeat-time 600

# Buffer and history settings
set -g history-limit 100000
set -g buffer-limit 20

# Update intervals
set -g status-interval 5
set -g display-time 3000
set -g display-panes-time 3000

# Enable focus events for better vim/nvim integration
set -g focus-events on

# Aggressive resize for better multi-client support
setw -g aggressive-resize on

# ===============================================================================
# USABILITY ENHANCEMENTS
# ===============================================================================

# Enable mouse support with enhanced functionality
set -g mouse on

# Window and pane indexing (start from 1)
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# Automatic window renaming
setw -g automatic-rename on
set -g set-titles on
set -g set-titles-string "#I:#W - #{host}"

# Monitor activity and silence
setw -g monitor-activity on
setw -g monitor-silence 0
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g bell-action none

# ===============================================================================
# KEY BINDINGS - OPTIMIZED WORKFLOW
# ===============================================================================

# Change prefix to Ctrl+a (more ergonomic)
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Quick config reload
bind r source-file ~/.tmux.conf \; display "üîÑ Configuration reloaded!"

# Quick edit config file
bind e new-window -n "tmux-config" "nvim ~/.tmux.conf"

# Quick access to frequently used commands
bind C-n new-session
bind C-r rotate-window
bind C-z resize-pane -Z

# -------------------------------------------------------------------------------
# SESSION MANAGEMENT
# -------------------------------------------------------------------------------

# Session management
bind N new-session
bind L choose-session
bind X confirm-before -p "Kill session #S? (y/n)" kill-session

# Quick session switching with fzf (if available)
bind C-j new-window -n "session-switcher" "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Detach others (useful for pair programming)
bind D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "No other clients attached"'

# -------------------------------------------------------------------------------
# WINDOW MANAGEMENT
# -------------------------------------------------------------------------------

# Create new window with current path
bind c new-window -c "#{pane_current_path}"

# Window navigation
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# Quick window switching
bind -n M-p previous-window
bind -n M-n next-window
bind -n M-Tab last-window

# Window operations
bind w choose-window
bind m command-prompt -p "Move window to:" "move-window -t '%%'"
bind R command-prompt -I "#W" "rename-window '%%'"

# -------------------------------------------------------------------------------
# PANE MANAGEMENT
# -------------------------------------------------------------------------------

# Smart pane splitting with current path
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}"

# Pane navigation (vim-like)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Alt+arrow keys for pane navigation (no prefix needed)
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Pane resizing (repeatable)
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Pane management
bind x kill-pane
bind X kill-window
bind q display-panes
bind z resize-pane -Z
bind Space next-layout
bind o rotate-window

# Pane synchronization toggle
bind S setw synchronize-panes \; display "Sync #{?pane_synchronized,üîó ON,‚ùå OFF}"

# Better pane splitting shortcuts
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

# Quick pane layouts
bind M-1 select-layout even-horizontal
bind M-2 select-layout even-vertical
bind M-3 select-layout main-horizontal
bind M-4 select-layout main-vertical
bind M-5 select-layout tiled

# Clock display - Original tmux clock
bind t clock-mode

# -------------------------------------------------------------------------------
# COPY MODE - VIM-LIKE EXPERIENCE
# -------------------------------------------------------------------------------

# Enable vi mode
setw -g mode-keys vi

# Copy mode bindings
bind Enter copy-mode
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send-keys -X cancel
bind -T copy-mode-vi H send-keys -X start-of-line
bind -T copy-mode-vi L send-keys -X end-of-line

# Enhanced copy mode navigation
bind -T copy-mode-vi 'C-h' send-keys -X start-of-line
bind -T copy-mode-vi 'C-l' send-keys -X end-of-line
bind -T copy-mode-vi 'C-j' send-keys -X halfpage-down
bind -T copy-mode-vi 'C-k' send-keys -X halfpage-up

# Search in copy mode
bind -T copy-mode-vi '/' send-keys -X search-forward
bind -T copy-mode-vi '?' send-keys -X search-backward
bind -T copy-mode-vi 'n' send-keys -X search-again
bind -T copy-mode-vi 'N' send-keys -X search-reverse

# Mouse support in copy mode
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection-and-cancel

# Paste
bind p paste-buffer
bind P choose-buffer

# ===============================================================================
# VISUAL STYLING - CATPPUCCIN MOCHA THEME
# ===============================================================================

# Color palette (Catppuccin Mocha)
thm_bg="#1e1e2e"
thm_fg="#cdd6f4"
thm_cyan="#89dceb"
thm_black="#181825"
thm_gray="#313244"
thm_magenta="#cba6f7"
thm_pink="#f5c2e7"
thm_red="#f38ba8"
thm_green="#a6e3a1"
thm_yellow="#f9e2af"
thm_blue="#89b4fa"
thm_orange="#fab387"
thm_black4="#585b70"
thm_surface0="#313244"
thm_surface1="#45475a"
thm_surface2="#585b70"

# -------------------------------------------------------------------------------
# STATUS BAR CONFIGURATION
# -------------------------------------------------------------------------------

# Status bar position and basic styling
set -g status-position bottom
set -g status-justify left
set -g status-style "bg=$thm_bg,fg=$thm_fg"
set -g status-left-length 100
set -g status-right-length 150

# Status bar segments
set -g status-left "#[fg=$thm_blue,bg=$thm_surface0,nobold,nounderscore,noitalics]#[fg=$thm_fg,bg=$thm_surface0] Û∞åå #{session_windows} #[fg=$thm_surface0,bg=$thm_bg,nobold,nounderscore,noitalics]"
set -g status-right "#{prefix_highlight}#[fg=$thm_surface1,bg=$thm_bg,nobold,nounderscore,noitalics]#[fg=$thm_fg,bg=$thm_surface1] Û∞ò¨ #{?pane_in_mode,COPY,NORMAL} #[fg=$thm_surface2,bg=$thm_surface1,nobold,nounderscore,noitalics]#[fg=$thm_fg,bg=$thm_surface2] #{?pane_synchronized,üîó SYNC,üî≤ #{window_panes}} #[fg=$thm_green,bg=$thm_surface2,nobold,nounderscore,noitalics]#[fg=$thm_bg,bg=$thm_green,bold] #{battery_icon}#{battery_percentage} #[fg=$thm_blue,bg=$thm_green,nobold,nounderscore,noitalics]#[fg=$thm_bg,bg=$thm_blue,bold] Û∞•î %H:%M Û∞∏ó %d "

# Alternative minimal time format (uncomment if you prefer less info)
# set -g status-right "#{prefix_highlight}#[fg=$thm_surface1,bg=$thm_bg,nobold,nounderscore,noitalics]#[fg=$thm_fg,bg=$thm_surface1] Û∞ò¨ #{?pane_in_mode,COPY,NORMAL} #[fg=$thm_surface2,bg=$thm_surface1,nobold,nounderscore,noitalics]#[fg=$thm_fg,bg=$thm_surface2] #{?pane_synchronized,üîó SYNC,üî≤ #{window_panes}} #[fg=$thm_green,bg=$thm_surface2,nobold,nounderscore,noitalics]#[fg=$thm_bg,bg=$thm_green,bold] #{battery_icon} #{battery_percentage} #[fg=$thm_blue,bg=$thm_green,nobold,nounderscore,noitalics]#[fg=$thm_bg,bg=$thm_blue,bold] Û∞ãó %H:%M "

# Window status styling
setw -g window-status-style "fg=$thm_fg,bg=$thm_bg,none"
setw -g window-status-activity-style "fg=$thm_fg,bg=$thm_bg,none"
setw -g window-status-separator ""
setw -g window-status-format "#[fg=$thm_bg,bg=$thm_surface0,nobold,nounderscore,noitalics]#[fg=$thm_fg,bg=$thm_surface0] #I #[fg=$thm_fg,bg=$thm_surface0,nobold,nounderscore,noitalics] #W #F #[fg=$thm_surface0,bg=$thm_bg,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[fg=$thm_bg,bg=$thm_orange,nobold,nounderscore,noitalics]#[fg=$thm_bg,bg=$thm_orange,bold] #I #[fg=$thm_bg,bg=$thm_orange,nobold,nounderscore,noitalics] #W #F #[fg=$thm_orange,bg=$thm_bg,nobold,nounderscore,noitalics]"

# -------------------------------------------------------------------------------
# PANE STYLING
# -------------------------------------------------------------------------------

# Pane border colors
set -g pane-border-style "fg=$thm_surface1"
set -g pane-active-border-style "fg=$thm_blue"

# Pane number display
set -g display-panes-active-colour "$thm_blue"
set -g display-panes-colour "$thm_surface1"

# -------------------------------------------------------------------------------
# MESSAGE STYLING
# -------------------------------------------------------------------------------

# Command line styling
set -g message-style "fg=$thm_blue,bg=$thm_surface0"
set -g message-command-style "fg=$thm_blue,bg=$thm_surface0"

# -------------------------------------------------------------------------------
# COPY MODE STYLING
# -------------------------------------------------------------------------------

# Copy mode colors
setw -g mode-style "fg=$thm_bg,bg=$thm_yellow"

# ===============================================================================
# PLUGIN MANAGEMENT
# ===============================================================================

# Plugin manager
set -g @plugin 'tmux-plugins/tpm'

# Essential plugins for enhanced functionality
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-fpp'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-copycat'

# Additional useful plugins
set -g @plugin 'laktak/extrakto'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'tmux-plugins/tmux-battery'

# -------------------------------------------------------------------------------
# PLUGIN CONFIGURATIONS
# -------------------------------------------------------------------------------

# tmux-resurrect: Session persistence
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-save-shell-history 'on'

# tmux-continuum: Automatic session saving
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'
set -g @continuum-boot 'on'

# tmux-yank: Enhanced copying (WSL-specific settings are handled separately)
set -g @yank_with_mouse on

# tmux-prefix-highlight: Visual prefix indicator
set -g @prefix_highlight_fg '$thm_bg'
set -g @prefix_highlight_bg '$thm_green'
set -g @prefix_highlight_prefix_prompt '‚å®Ô∏è'
set -g @prefix_highlight_copy_prompt 'üìã'
set -g @prefix_highlight_sync_prompt 'üîó'

# tmux-fzf: Fuzzy finder integration
set -g @tmux-fzf-launch-key 'Tab'

# extrakto: Text extraction
set -g @extrakto_key 'e'
set -g @extrakto_default_opt 'word'
set -g @extrakto_split_direction 'v'
set -g @extrakto_copy_key 'tab'
set -g @extrakto_insert_key 'enter'

# tmux-battery: Battery information
set -g @batt_icon_status_charging '‚ö°'
set -g @batt_icon_status_discharging 'üîã'
set -g @batt_icon_status_attached 'üîå'
set -g @batt_icon_status_unknown '‚ùì'
set -g @batt_icon_charge_tier8 'üåï'
set -g @batt_icon_charge_tier7 'üåñ'
set -g @batt_icon_charge_tier6 'üåó'
set -g @batt_icon_charge_tier5 'üåò'
set -g @batt_icon_charge_tier4 'üåë'
set -g @batt_icon_charge_tier3 'üåí'
set -g @batt_icon_charge_tier2 'üåì'
set -g @batt_icon_charge_tier1 'üåî'
set -g @batt_color_status_primary_charged '#a6e3a1'
set -g @batt_color_status_primary_charging '#f9e2af'
set -g @batt_color_status_primary_discharging '#f38ba8'

# ===============================================================================
# CONDITIONAL CONFIGURATIONS
# ===============================================================================

# macOS specific settings
if-shell "uname | grep -q Darwin" \
  'set -g default-command "reattach-to-user-namespace -l zsh"'

# WSL specific settings - streamlined clipboard integration
if-shell "grep -q Microsoft /proc/version" \
  'set -g @yank_action "copy-pipe-and-cancel"; set -g @copy_command "clip.exe"; bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "clip.exe"; bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "clip.exe"'

# ===============================================================================
# CUSTOM HOOKS AND AUTOMATION
# ===============================================================================

# Automatically set window title to current directory
set-hook -g after-new-window 'rename-window "#{b:pane_current_path}"'
set-hook -g after-split-window 'rename-window "#{b:pane_current_path}"'

# Smart pane switching with awareness of vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

# ===============================================================================
# INITIALIZE PLUGIN MANAGER
# ===============================================================================

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# ===============================================================================
# PERFORMANCE NOTES
# ===============================================================================
# To profile tmux performance, uncomment the following line:
# set -g status-right "#(uptime | cut -d ',' -f 3-)"
